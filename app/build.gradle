plugins {
    id 'com.android.application'
}
apply plugin: 'com.example.lintPlugin'

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.example.lint"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions{
        abortOnError true
        baseline file("lint-baseline.xml")
    }
}

lintConfig {
    //配置Lint检查文件的类型
    lintCheckFileType = ".java,.xml"
    //是否将检查文件的所有扫描结果都输出
    lintReportAll = true
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation project(':lintarr')
}

/**
 * 在执行 assembleDebug Task 之前挂载 lintDebug
 */
project.afterEvaluate {
    def assembleDebugTask = project.tasks.find { it.name == 'assembleDebug' }
    def lintTask = project.tasks.find { it.name == 'lintDebug' }
    assembleDebugTask.dependsOn(lintTask)
}